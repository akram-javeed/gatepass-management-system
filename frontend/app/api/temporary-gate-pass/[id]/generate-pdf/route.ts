// app/api/temporary-gate-pass/[id]/generate-pdf/route.ts

import { NextRequest, NextResponse } from "next/server"
import { pool } from "@/lib/db"

export async function POST(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const { id } = await params
    const body = await request.json()
    
    const { chos_id, chos_name, signature } = body

    // Update temporary gate pass after Ch.OS/NPB approval
    const updateQuery = `
      UPDATE temporary_gate_passes 
      SET 
        status = 'approved',
        approved_by_chos_id = $1,
        chos_approval_date = CURRENT_TIMESTAMP,
        pdf_generated = true,
        gate_permit_number = $2,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = $3
      RETURNING *
    `

    // Generate unique gate permit number
    const permitNumber = `GP/TEMP/${new Date().getFullYear()}/${Date.now().toString().slice(-6)}`

    const result = await pool.query(updateQuery, [
      chos_id,
      permitNumber,
      id
    ])

    if (result.rows.length === 0) {
      throw new Error("Temporary gate pass not found")
    }

    // Generate PDF logic here
    // const pdfPath = await generateTempPassPDF(result.rows[0], signature)

    // Log the final approval
    await pool.query(
      `INSERT INTO temporary_pass_logs (
        temp_pass_id, 
        action, 
        performed_by_user_id,
        performed_by_role,
        remarks, 
        new_status,
        timestamp
      ) VALUES ($1, $2, $3, $4, $5, $6, CURRENT_TIMESTAMP)`,
      [
        id,
        'chos_approved_and_generated_pdf',
        chos_id,
        'chos',
        `Gate pass generated by ${chos_name}`,
        'approved'
      ]
    )

    return NextResponse.json({
      success: true,
      message: "Temporary gate pass approved and PDF generated",
      application: result.rows[0],
      permitNumber: permitNumber
    })

  } catch (error) {
    console.error("Error generating temporary gate pass PDF:", error)
    return NextResponse.json({
      success: false,
      error: "Failed to generate PDF",
      details: error instanceof Error ? error.message : "Unknown error"
    }, { status: 500 })
  }
}